# build-system
# - ref: https://peps.python.org/pep-0517/
#
[build-system]
build-backend = "hatchling.build"
requires = [
    "hatch-jupyter-builder >=0.5",
    "hatch-nodejs-version",
    "hatchling >=1.4.0",
    "jupyterlab >=3.4.7,<4.0.0",
]


# project
# - ref 1: https://peps.python.org/pep-0621/
# - ref 2: https://hatch.pypa.io/latest/config/metadata/#project-metadata
#
[project]
name = "jupyter_server_proxy"
dynamic = [
    "authors",
    "description",
    "keywords",
    "urls",
    "version",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 3",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "aiohttp",
    "importlib_metadata >=4.8.3 ; python_version<\"3.10\"",
    "jupyter-server >=1.0",
    "simpervisor >=1.0",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-html",
]
# acceptance tests additionally require firefox and geckodriver
acceptance = [
    "jupyter-server-proxy[test]",
    "notebook <7",
    "robotframework-jupyterlibrary >=0.5.0a0",
]


[tool.hatch.version]
source = "nodejs"
path = "labextension/package.json"

[tool.hatch.build.targets.sdist]
artifacts = [
    "jupyter_server_proxy/labextension",
]
exclude = [
    ".git",
    ".github",
    ".readthedocs.yaml",
    ".pre-commit-config.yaml",
    "contrib",
    "docs",
]

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_server_proxy/etc" = "etc/jupyter"
"jupyter_server_proxy/labextension" = "share/jupyter/labextensions/@jupyterhub/jupyter-server-proxy"
"jupyter_server_proxy/static" = "share/jupyter/nbextensions/jupyter_server_proxy"

[tool.hatch.metadata]
# Set to true to allow testing of git+https://github.com/user/repo@sha dependencies
allow-direct-references = false

[tool.hatch.metadata.hooks.nodejs]
path = "labextension/package.json"
fields = ["description", "authors", "urls"]

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_server_proxy/labextension/static/style.js",
    "jupyter_server_proxy/labextension/package.json",
    "jupyter_server_proxy/labextension/static/third-party-licenses.json",
]
skip-if-exists = ["jupyter_server_proxy/labextension/package.json"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "labextension"
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
path = "labextension"
build_cmd = "build"
npm = ["jlpm"]
source_dir = "labextension/src"
build_dir = "jupyter_server_proxy/labextension"


# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
# target-version should be all supported versions, see
# https://github.com/psf/black/issues/751#issuecomment-473066811
target_version = [
    "py38",
    "py39",
    "py310",
    "py311",
]
extend-exclude = 'contrib\/template\/'


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterhub/jupyter-server-proxy"

[tool.tbump.version]
current = "4.0.0"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    -?
    (?P<pre>((alpha|beta|rc)\.\d+)|)
    (?P<dev>(dev\.\d+)|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "labextension/package.json"

[tool.pytest.ini_options]
cache_dir = "build/.cache/pytest"
addopts = [
    "-vv",
    "--cov=jupyter_server_proxy",
    "--cov-branch",
    "--cov-context=test",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:build/coverage",
    "--html=build/pytest/index.html",
    "--color=yes",
]

[tool.coverage.run]
data_file = "build/.coverage"
concurrency = [
    "multiprocessing",
    "thread"
]

[tool.coverage.html]
show_contexts = true
