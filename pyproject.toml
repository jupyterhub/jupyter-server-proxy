# build-system
# - ref: https://peps.python.org/pep-0517/
#
[build-system]
build-backend = "hatchling.build"
requires = [
    "hatch-jupyter-builder >=0.8.3",
    "hatchling >=1.18.0",
    "jupyterlab >=4.0.6,<5.0.0a0",
]


# project
# - ref 1: https://peps.python.org/pep-0621/
# - ref 2: https://hatch.pypa.io/latest/config/metadata/#project-metadata
#
[project]
name = "jupyter_server_proxy"
version = "4.1.3-0.dev"
description = "A Jupyter server extension to run additional processes and proxy to them that comes bundled JupyterLab extension to launch pre-defined processes."
keywords = ["jupyter", "jupyterlab", "jupyterlab-extension"]
authors = [
  { name = "Ryan Lovett", email = "rylo@berkeley.edu" },
  { name = "Yuvi Panda", email = "yuvipanda@gmail.com" },
  { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 3",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "aiohttp",
    "importlib_metadata >=4.8.3 ; python_version<\"3.10\"",
    "jupyter-server >=1.24.0",
    "simpervisor >=1.0.0",
    "tornado >=6.1.0",
    "traitlets >= 5.1.0",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-html",
]
# acceptance tests additionally require firefox and geckodriver
acceptance = [
    "jupyter-server-proxy[test]",
    "robotframework-jupyterlibrary >=0.4.2",
]
classic = [
    "jupyter-server <2",
    "jupyterlab >=3.0.0,<4.0.0a0",
    "notebook <7.0.0a0",
]
lab = [
    "jupyter-server >=2",
    "jupyterlab >=4.0.5,<5.0.0a0",
    "nbclassic",
    "notebook >=7",
]

[project.urls]
Documentation = "https://jupyter-server-proxy.readthedocs.io"
Source = "https://github.com/jupyterhub/jupyter-server-proxy"
Tracker = "https://github.com/jupyterhub/jupyter-server-proxy/issues"


# hatch ref: https://hatch.pypa.io/latest/
#
[tool.hatch.build.targets.sdist]
artifacts = [
    "jupyter_server_proxy/labextension",
]
exclude = [
    ".git",
    ".github",
    ".readthedocs.yaml",
    ".pre-commit-config.yaml",
    "contrib",
    "docs",
]

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_server_proxy/etc" = "etc/jupyter"
"jupyter_server_proxy/labextension" = "share/jupyter/labextensions/@jupyterhub/jupyter-server-proxy"
"jupyter_server_proxy/static" = "share/jupyter/nbextensions/jupyter_server_proxy"

[tool.hatch.metadata]
# Set to true to allow testing of git+https://github.com/user/repo@sha dependencies
allow-direct-references = false

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_server_proxy/labextension/static/style.js",
    "jupyter_server_proxy/labextension/package.json",
    "jupyter_server_proxy/labextension/static/third-party-licenses.json",
]
skip-if-exists = ["jupyter_server_proxy/labextension/package.json"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "labextension"
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
path = "labextension"
build_cmd = "build"
npm = ["jlpm"]
source_dir = "labextension/src"
build_dir = "jupyter_server_proxy/labextension"


# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
extend-exclude = 'contrib\/template\/'


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterhub/jupyter-server-proxy"

[tool.tbump.version]
current = "4.1.3-0.dev"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    -?
    (?P<pre>((alpha|beta|rc)\.\d+)|)
    (?P<dev>(0\.dev)|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "labextension/package.json"


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = [
    "--verbose",
    "--durations=10",
    "--color=yes",
    "--cov=jupyter_server_proxy",
    "--cov-branch",
    "--cov-context=test",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:build/coverage",
    "--no-cov-on-fail",
    "--html=build/pytest/index.html",
]
asyncio_mode = "auto"
testpaths = ["tests"]
cache_dir = "build/.cache/pytest"


# pytest-cov / coverage is used to measure code coverage of tests
#
# ref: https://coverage.readthedocs.io/en/stable/config.html
#
[tool.coverage.run]
data_file = "build/.coverage"
concurrency = [
    "multiprocessing",
    "thread"
]

[tool.coverage.html]
show_contexts = true
